<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/jdbc     
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd">

	 <context:annotation-config />

	<jdbc:embedded-database id="dataSource" type="HSQL">
		<jdbc:script location="classpath:db/sql/create-db.sql" />
		<jdbc:script location="classpath:db/sql/insert-data.sql" />
	</jdbc:embedded-database>
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
<!-- 	<beans:bean id="controller" class="com.usermanagement.spring.controller.EmployeeController" >
	<beans:property name="jdbcTemplate"  ref="jdbcTemplate" />
	</beans:bean> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>	
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" >
	<beans:constructor-arg ref="dbcpDataSource" />
	</beans:bean>

<beans:bean id="dbcpDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
	<beans:property name="driverClassName" value="org.hsqldb.jdbcDriver" />
	<beans:property name="url" value="jdbc:hsqldb:mem:dataSource" />
	<beans:property name="username" value="sa" />
	<beans:property name="password" value="" />
</beans:bean>



<beans:bean id="hibernate3AnnotatedSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<beans:property name="dataSource" ref="dbcpDataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.usermanagement.spring.model.Person</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.current_session_context_class">thread</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	

<beans:bean id="userControllerDAO" class="com.usermanagement.spring.controller.UserControllerDAO">
   <beans:property name="sessionFactory" ref="hibernate3AnnotatedSessionFactory" />
</beans:bean>
		<!-- jdbc:hsqldb:mem:dataSource -->
<jdbc:embedded-database id="dataSource" type="HSQL">
	
</jdbc:embedded-database>

	
	<context:component-scan base-package="com.usermanagement.spring.controller" />

</beans:beans>
